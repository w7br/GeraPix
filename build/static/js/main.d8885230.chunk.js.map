{"version":3,"sources":["image/logo.png","image/google-icon.svg","image/logo.svg","firebase.js","contexts/AuthContext.js","components/CreateKey.js","components/ForgotPassword.js","components/GeraValor.js","components/Login.js","components/PrivateRoute.js","components/Profile.js","components/Pix.js","components/QRCode.js","components/Signup.js","components/UpdateData.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","signInWithGoogle","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","Provider","CreatKey","error","setError","history","useHistory","push","newChave","setNewChave","newCity","setNewcity","newName","setNewName","event","preventDefault","trim","firebaseClient","authorId","city","chave","createdAt","Date","toLocaleString","timeZone","ref","Card","className","Button","variant","onClick","Body","src","logo","alt","width","Alert","to","Footer","Form","onSubmit","Group","Label","Control","type","required","placeholder","onChange","target","ForgotPassword","emailRef","useRef","message","setMessage","e","current","disabled","GerarValor","newPix","setPix","newTextId","setTextId","newMessage","valorPix","textId","date","toUTCString","created","console","log","key","data-number-to-fixed","data-number-stepfactor","disableAbbreviations","allowDecimals","decimalsLimit","fixedDecimalLength","parsedValue","replace","onBlur","Number","toFixed","Login","passwordRef","then","googleIconImg","PrivateRoute","Component","component","rest","render","props","Profile","setChave","setCity","setName","chaveRef","child","get","chaveRes","dataChave","dataRes","val","resChave","Object","entries","map","normalize","GetData","Pix","pixKey","description","merchantName","merchantCity","txid","amount","this","ID_PAYLOAD_FORMAT_INDICATOR","ID_MERCHANT_ACCOUNT_INFORMATION","ID_MERCHANT_ACCOUNT_INFORMATION_GUI","ID_MERCHANT_ACCOUNT_INFORMATION_KEY","ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION","ID_MERCHANT_CATEGORY_CODE","ID_TRANSACTION_CURRENCY","ID_TRANSACTION_AMOUNT","ID_COUNTRY_CODE","ID_MERCHANT_NAME","ID_MERCHANT_CITY","ID_ADDITIONAL_DATA_FIELD_TEMPLATE","ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID","ID_CRC16","String","length","padStart","gui","_getValue","payload","_getMechantAccountInfo","_getAdditionalDataFieldTemplate","_getCRC16","number","resultado","offset","charCodeAt","bitwise","parseInt","toString","toUpperCase","QRCode","require","GenerationQRCode","setValorPix","show","setShow","useParams","idKey","clientsRef","clientList","limitToLast","getPayload","Toast","onClose","delay","autohide","top-center","Header","size","level","includeMargin","setTimeout","navigator","clipboard","writeText","Signup","passwordConfirmRef","UpData","clientRef","UpdateProfile","promises","Promise","all","catch","finally","defaultValue","App","Container","style","minHeight","maxWidth","exact","path","CreateKey","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8885230.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.110792ea.png\";","module.exports = __webpack_public_path__ + \"static/media/google-icon.ece0e37c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.65fc2ba2.svg\";","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\n\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID\r\n})\r\n\r\n\r\nconst database = firebase.database()\r\nconst auth = app.auth()\r\n// export default app \r\n\r\nexport { firebase, auth, database }","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth, firebase } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    signInWithGoogle\r\n  }\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider);\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user\r\n\r\n      if (!displayName || !photoURL) {\r\n        throw new Error('Missing information from Google Account.');\r\n      }\r\n\r\n      setCurrentUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import firebase from 'firebase'\r\nimport 'firebase/database'\r\nimport React, { useState } from \"react\"\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport logo from '../image/logo.png'\r\n\r\n\r\nexport default function CreatKey() {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n    try {\r\n      await logout()\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Falha para fazer logout\")\r\n    }\r\n  }\r\n\r\n  const user = firebase.auth().currentUser;\r\n  //criar database realtime \r\n  const [newChave, setNewChave] = useState('')\r\n  const [newCity, setNewcity] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n\r\n  async function handCreateClient(event) {\r\n    event.preventDefault()\r\n\r\n    if (newChave.trim() === '') {\r\n      return\r\n    }\r\n    if (newName.trim() === '') {\r\n      return\r\n    }\r\n    if (newCity.trim() === '') {\r\n      return\r\n    }\r\n\r\n    const firebaseClient = {\r\n      name: newName,\r\n      authorId: currentUser?.uid,\r\n      city: newCity,\r\n      chave: newChave,\r\n      createdAt: new Date().toLocaleString().toLocaleString('pt-BR', { timeZone: 'America/Sao_Paulo' })\r\n    };\r\n    await firebase.database().ref(`clients/${user?.uid}/key`).push(firebaseClient);\r\n    history.push(\"/GerarValor\");\r\n  }\r\n  // fim do criar database\r\n  return (\r\n    <>\r\n      <Card className=\"text-white  shadow  bg-secondary rounded mb-2\">\r\n        <div className=\"text-right\">\r\n          <Button className=\"badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n\r\n        </div>\r\n\r\n        <Card.Body>\r\n          <div>\r\n            <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          </div>\r\n\r\n          <h6 className=\"text-center font-weight-bold \">CONTA</h6>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <div className=\"user-info text-center \">\r\n            <img className=\"rounded-circle text-center\" src={currentUser.photoURL} alt={currentUser.displayName} />\r\n            <p className=\"font-weight-bold mb-4\">{currentUser.displayName}</p>\r\n            <Link to=\"/update-profile\" className=\"btn btn-primary btn-sm mt-8\">\r\n              Atualizar senha\r\n            </Link>\r\n\r\n          </div>\r\n\r\n\r\n        </Card.Body>\r\n      </Card>\r\n      <Card.Footer className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <h2 className=\"text-center d-block mb-4\">CRIE SUA CONTA PIX</h2>\r\n        <p className=\"text-center\"> Coloque seus dados já cadastrado no seu banco para gerar o PIX com seus dados</p>\r\n        <Form onSubmit={handCreateClient}>\r\n          <Form.Group className=\"mb-4 mt-4\" id=\"chave\">\r\n            <Form.Label className=\"mb-0\">Chave PIX</Form.Label>\r\n            <Form.Control type=\"text\" name=\"newChave\" required placeholder=\"Digite sua chave PIX\"\r\n              onChange={(event) => setNewChave(event.target.value)}\r\n            />\r\n            <small className=\"form-text text-muted\">PIX cadastrada (Telefone, E-mail, CPF, CNPJ ou chave Aleatória) </small>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4\" id=\"name\">\r\n            <Form.Label className=\"mb-0\">Nome do beneficiário</Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" required placeholder=\"Nome beneficiário\"\r\n              onChange={(event) => setNewName(event.target.value)}\r\n            />\r\n            <small className=\"form-text text-muted\">Nome do beneficiário (até 25 letras). </small>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4\" id=\"city\">\r\n            <Form.Label className=\"mb-0\">Digite a cidade</Form.Label>\r\n            <Form.Control type=\"text\" name=\"city\" required placeholder=\"Digite a cidade\"\r\n              onChange={(event) => setNewcity(event.target.value)}\r\n            />\r\n            <small className=\"mt-0 form-text text-muted\">Cidade do beneficiário ou da transação (até 15 letras) </small>\r\n          </Form.Group>\r\n          <Button className=\"w-100\" type=\"submit\">\r\n            CRIAR CONTA\r\n          </Button>\r\n        </Form>\r\n      </Card.Footer>\r\n\r\n    </>\r\n  )\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport logo from '../image/logo.svg'\r\n\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(false)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Verifique sua caixa de e-mail\")\r\n    } catch {\r\n      setError(\"Erro na recuperação de e-mail\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <Card.Body>\r\n          <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          <h2 className=\"text-center mt-4\">RECUPERAR SENHA</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label className=\"mt-4 mb-0\">E-mail</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              RECUPERAR\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-4\">\r\n            <Link to=\"/login\">ENTRAR</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Cricar conta? <Link to=\"/signup\">Criar</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import firebase from 'firebase';\r\nimport 'firebase/database';\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport logo from '../image/logo.png';\r\n\r\n\r\nexport default function GerarValor() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const [newPix, setPix] = useState();\r\n  const [newTextId, setTextId] = useState('Gerapix');\r\n  const [newMessage, setMessage] = useState('Gerapix');\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { value = \"\" } = e.target;\r\n    const parsedValue = value.replace(/[^\\d.]/gi, \"\");\r\n    setPix(parsedValue);\r\n  };\r\n  const handleOnBlur = () => setPix(Number(newPix).toFixed(2));\r\n  //logout incio \r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Falha para fazer logout\")\r\n    }\r\n  }\r\n  //Criar pix realtime \r\n  const user = firebase.auth().currentUser;\r\n  async function handCreatPix(event) {\r\n    event.preventDefault()\r\n\r\n    const firebaseClient = {\r\n      valorPix: newPix,\r\n      authorId: currentUser.uid,\r\n      textId: newTextId,\r\n      message: newMessage,\r\n      // date utc create \r\n      date: new Date().toUTCString()\r\n    };\r\n   const created =  await firebase.database().ref(`clients/${user?.uid}/PixCreated/`).push(firebaseClient);\r\n   console.log(created.key);\r\n   \r\n   \r\n    history.push(\"/QRCode/\" + created.key);\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <Card className=\"text-white  shadow  bg-secondary rounded mb-2\">\r\n        <div className=\"w-100 text-right\">\r\n          <Button className=\"mr-03 badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n        </div>\r\n        <Card.Body>\r\n          <div className=\"text-center\">\r\n            <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card.Footer className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <div className=\"user-info text-center mb-4\">\r\n          <Form>\r\n            <Form.Group className=\"mb-4\" id=\"chave\">\r\n              <Form.Label className=\"mb-0\"><h4>Valor da conta</h4></Form.Label>\r\n              <small className=\"form-text text-muted\">R${newPix} Digite o valor do PIX </small>\r\n              <CurrencyInput\r\n                className=\"form-control\"\r\n                data-number-to-fixed=\"2\"\r\n                data-number-stepfactor=\"100\"\r\n                name=\"newPix\"\r\n                id=\"newPix\"\r\n                value={newPix}\r\n                disableAbbreviations\r\n                allowDecimals\r\n                decimalsLimit=\"2\"\r\n                fixedDecimalLength=\"2\"\r\n                onChange={handleChange}\r\n                onBlur={handleOnBlur}\r\n                placeholder=\"R$ 0.00\" />\r\n\r\n              <small className=\"form-text text-right text-muted\">Digite mensagem para o cliente </small>\r\n              <Form.Control type=\"text\" name=\"newTextId\" required placeholder=\"Digite um Identificador da venda\"\r\n                onChange={(event) => setTextId(event.target.value)} />\r\n              <small className=\"form-text text-right text-muted\">Digite um identificador da venda </small>\r\n              <Form.Control type=\"text\" name=\"newMessage\" required placeholder=\"Mensagem para o cliente\"\r\n                onChange={(event) => setMessage(event.target.value)} />\r\n            </Form.Group>\r\n            <Button onClick={handCreatPix} className=\"w-100\" type=\"submit\">\r\n              CRIAR QR-CODE\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n        <div className=\"pl-3 pr-3 row justify-content-between mt-4\">\r\n          <Link className=\"btn btn-primary btn-sm\" to=\"/UpData\">Atualizar chave</Link>\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary btn-sm mt-8\">\r\n            Atualizar senha\r\n          </Link>\r\n        </div>\r\n      </Card.Footer>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nimport firebase from \"firebase\"\r\n\r\nimport logo from '../image/logo.png'\r\nimport googleIconImg from '../image/google-icon.svg';\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Senhar ou e-mail incorreto\")\r\n    }\r\n\r\n\r\n    setLoading(false)\r\n\r\n  }\r\n\r\n  //login google incio\r\n\r\n  async function handLoginGoogle() {\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebase.auth().signInWithPopup(provider).then((result) => {\r\n\r\n\r\n    })\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Algo deu errado, tente novamente\")\r\n\r\n    }\r\n\r\n  }\r\n  // login google final \r\n  return (\r\n    <>\r\n      <Card className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <Card.Body>\r\n          <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          <p className=\"text-center\"> Faça seu login e cria sua conta PIX.\r\n            Simples rápido e fácil. Caso não tenha conta basta\r\n            <Link className=\"btn btn-link\" to=\"/signup\">clicar aqui</Link>e criar uma.\r\n          </p>\r\n\r\n          <p className=\"text-center mb-4 mt-4\">ENTRAR NA CONTA</p>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <button onClick={handLoginGoogle} className=\"w-100 mt-4 mb-4 btn-lg btn btn-danger\" >\r\n            <img className=\"pr-4\" src={googleIconImg} alt=\"Logo do Google\" />\r\n            Use o Google\r\n          </button>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label className=\"mt-1 mb-0\">E-mail</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Digite seu e-mail\" />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label className=\"mb-0\">Senha</Form.Label>\r\n              <Form.Control className=\"form-control Default input\" type=\"password\" ref={passwordRef} required placeholder=\"Digite sua senha!\" />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">\r\n              Entrar\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">Esqueceu sua senha?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center \">\r\n        Crie uma conta! <Link className=\"btn btn-link\" to=\"/signup\">Criar conta</Link>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n}","import React from \"react\"\r\nimport { Redirect, Route } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import firebase from 'firebase';\r\nimport \"firebase/database\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Card } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport logo from '../image/logo.png';\r\n\r\n\r\n\r\nexport default function Profile() {\r\n  const [error, setError] = useState('');\r\n  const [chave, setChave] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [name, setName] = useState('');\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n  const user = firebase.auth().currentUser;\r\n  //logout incio \r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Falha para fazer logout\")\r\n    }\r\n  }\r\n  // Recuperara dados do realtime database \r\n  const chaveRef = firebase.database().ref();\r\n\r\n  async function GetData() {\r\n    const chaveRes = await chaveRef.child(`clients/${user.uid}/key/`).get(user?.uid);\r\n\r\n    const dataChave = [];\r\n    const dataRes = chaveRes.val();\r\n    for (let id in dataRes) {\r\n      dataChave.push(id, dataRes);\r\n    };\r\n   \r\n    const resChave = Object.entries(chaveRes.val() ?? {}).map(([key, value]) => {\r\n      return {\r\n        'chave': value.chave,\r\n        'city': value.city.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\r\n        'name': value.name.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r\n      }\r\n    }\r\n    );\r\n    // ver dados do realtime database redirecionar para a pagina de valor\r\n    if (chaveRes.val() === null) {\r\n      history.push(\"/UpData\")\r\n    } else {\r\n      history.push(\"/GerarValor\")\r\n    \r\n    // Fim do codigo redirecionament\r\n    setChave(resChave[0].chave);\r\n    setCity(resChave[0].city);\r\n    setName(resChave[0].name);\r\n  };\r\n  };\r\n  GetData();\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"text-light shadow  bg-secondary rounded mb-2\">\r\n        <div className=\"w-100 text-right\">\r\n          <Button className=\"mr-03 badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n        </div>\r\n        <Card.Body>\r\n          <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          <h4 className=\"text-center mb-4 text-black\">SUA CONTA</h4>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <p>Os dados que aparecem aqui são os dados que você cadastrou no seu perfil.\r\n          </p>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card.Footer className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <div className=\"user-info text-center mb-4\">\r\n          <img className=\"rounded-circle text-center\" src={user.photoURL} alt={user.displayName} />\r\n          <p className=\"font-weight-bold mb-4\">{user.displayName}</p>\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <h4 className=\"text-center mb-4 mp-4\">SUA CONTA PIX</h4>\r\n          <p className=\" mb-0\"> NOME:</p>\r\n          <p className=\"text-decoration-underline font-italic border-bottom \"> {name}</p>\r\n          <p className=\" mb-0\"> CIDADE:</p>\r\n          <p className=\"text-decoration-underline font-italic border-bottom \"> {city}</p>\r\n          <p className=\"mb-0\"> CHAVE PIX:</p>\r\n          <p className=\"text-decoration-underline font-italic border-bottom \"> {chave} </p>\r\n        </div>\r\n        <div className=\"pl-3 pr-3 row justify-content-between\">\r\n          <Link className=\"btn btn-primary btn-sm\" to=\"/UpData\">Atualizar chave</Link>\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary btn-sm \">\r\n            Atualizar senha\r\n          </Link>\r\n        </div>\r\n      </Card.Footer>\r\n    </>\r\n  )\r\n};","\r\nexport default class Pix {\r\n\r\n  constructor(pixKey, description, merchantName, merchantCity, txid, amount) {\r\n    this.pixKey = pixKey;\r\n    this.description = description;\r\n    this.merchantName = merchantName;\r\n    this.merchantCity = merchantCity;\r\n    this.txid = txid;\r\n    this.amount = amount;\r\n    // this.amount = amount.toFixed(2);\r\n\r\n\r\n\r\n    this.ID_PAYLOAD_FORMAT_INDICATOR = \"00\";\r\n    this.ID_MERCHANT_ACCOUNT_INFORMATION = \"26\";\r\n    this.ID_MERCHANT_ACCOUNT_INFORMATION_GUI = \"00\";\r\n    this.ID_MERCHANT_ACCOUNT_INFORMATION_KEY = \"01\";\r\n    this.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION = \"02\";\r\n    this.ID_MERCHANT_CATEGORY_CODE = \"52\";\r\n    this.ID_TRANSACTION_CURRENCY = \"53\";\r\n    this.ID_TRANSACTION_AMOUNT = \"54\";\r\n    this.ID_COUNTRY_CODE = \"58\";\r\n    this.ID_MERCHANT_NAME = \"59\";\r\n    this.ID_MERCHANT_CITY = \"60\";\r\n    this.ID_ADDITIONAL_DATA_FIELD_TEMPLATE = \"62\";\r\n    this.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID = \"05\";\r\n    this.ID_CRC16 = \"63\";\r\n  }\r\n\r\n  _getValue(id, value) {\r\n    const size = String(value.length).padStart(2, \"0\");\r\n    return id + size + value;\r\n  }\r\n\r\n  _getMechantAccountInfo() {\r\n    const gui = this._getValue(\r\n      this.ID_MERCHANT_ACCOUNT_INFORMATION_GUI,\r\n      \"br.gov.bcb.pix\"\r\n    );\r\n    const key = this._getValue(\r\n      this.ID_MERCHANT_ACCOUNT_INFORMATION_KEY,\r\n      this.pixKey\r\n    );\r\n    const description = this._getValue(\r\n      this.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION,\r\n      this.description\r\n    );\r\n\r\n    return this._getValue(\r\n      this.ID_MERCHANT_ACCOUNT_INFORMATION,\r\n      gui + key + description\r\n    );\r\n  }\r\n\r\n  _getAdditionalDataFieldTemplate() {\r\n    const txid = this._getValue(\r\n      this.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID,\r\n      this.txid\r\n    );\r\n    return this._getValue(this.ID_ADDITIONAL_DATA_FIELD_TEMPLATE, txid);\r\n  }\r\n\r\n  getPayload() {\r\n    const payload =\r\n      this._getValue(this.ID_PAYLOAD_FORMAT_INDICATOR, \"01\") +\r\n      this._getMechantAccountInfo() +\r\n      this._getValue(this.ID_MERCHANT_CATEGORY_CODE, \"0000\") +\r\n      this._getValue(this.ID_TRANSACTION_CURRENCY, \"986\") +\r\n      this._getValue(this.ID_TRANSACTION_AMOUNT, this.amount) +\r\n      this._getValue(this.ID_COUNTRY_CODE, \"BR\") +\r\n      this._getValue(this.ID_MERCHANT_NAME, this.merchantName) +\r\n      this._getValue(this.ID_MERCHANT_CITY, this.merchantCity) +\r\n      this._getAdditionalDataFieldTemplate();\r\n\r\n    return payload + this._getCRC16(payload);\r\n  }\r\n\r\n  _getCRC16(payload) {\r\n    function ord(str) {\r\n      return str.charCodeAt(0);\r\n    }\r\n    function dechex(number) {\r\n      if (number < 0) {\r\n        number = 0xffffffff + number + 1;\r\n      }\r\n      return parseInt(number, 10).toString(16);\r\n    }\r\n\r\n    //ADICIONA DADOS GERAIS NO PAYLOAD\r\n    payload = payload + this.ID_CRC16 + \"04\";\r\n\r\n    //DADOS DEFINIDOS PELO BACEN\r\n    let polinomio = 0x1021;\r\n    let resultado = 0xffff;\r\n    let length;\r\n\r\n    //CHECKSUM\r\n    if ((length = payload.length) > 0) {\r\n      for (let offset = 0; offset < length; offset++) {\r\n        resultado ^= ord(payload[offset]) << 8;\r\n        for (let bitwise = 0; bitwise < 8; bitwise++) {\r\n          if ((resultado <<= 1) & 0x10000) resultado ^= polinomio;\r\n          resultado &= 0xffff;\r\n        }\r\n      }\r\n    }\r\n\r\n    //RETORNA CÓDIGO CRC16 DE 4 CARACTERES\r\n    return this.ID_CRC16 + \"04\" + dechex(resultado).toUpperCase();\r\n  }\r\n};\r\n\r\n\r\n\r\n","import \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport firebase from 'firebase';\r\nimport \"firebase/database\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Button, Card, Toast } from \"react-bootstrap\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport logo from '../image/logo.png';\r\nimport Pix from \"./Pix\";\r\n\r\nconst QRCode = require('qrcode.react');\r\n\r\nexport default function GenerationQRCode() {\r\n\r\n  const [error, setError] = useState('');\r\n  const [chave, setChave] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [valorPix, setValorPix] = useState('');\r\n  const [textId, setTextId] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const id = useParams().idKey;\r\n\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const user = firebase.auth().currentUser;\r\n  // Recuperara dados do realtime database \r\n  const clientsRef = firebase.database().ref();\r\n  const chaveRef = firebase.database().ref();\r\n  async function GetData() {\r\n    const clientList = await clientsRef.child(`clients/${user.uid}/PixCreated/${id}`).get();\r\n    const valorPix = clientList.val().valorPix;\r\n    const message = clientList.val().message;\r\n    const textId = clientList.val().textId;\r\n\r\n    setValorPix(valorPix);\r\n    setTextId(textId);\r\n    setMessage(message);\r\n\r\n    // get chave do cliente\r\n    const chaveRes = await chaveRef.child(`clients/${user.uid}/key/`).limitToLast(1).get();\r\n    const dataChave = [];\r\n    const dataRes = chaveRes.val();\r\n    for (let id in dataRes) {\r\n      dataChave.push(id, dataRes);\r\n    };\r\n    const resChave = Object.entries((chaveRes.val()) ?? {}).map(([key, value]) => {\r\n      return {\r\n        'chave': value.chave,\r\n        'city': value.city,\r\n        'name': value.name\r\n      }\r\n    }\r\n    );\r\n    setChave(resChave[0].chave);\r\n    setCity(resChave[0].city);\r\n    setName(resChave[0].name);\r\n  };\r\n  GetData();\r\n  // gerar qrcode Payload\r\n  const pix = new Pix(\r\n    chave,\r\n    message.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/\\s/g, ''),\r\n    name.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\r\n    city.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\"),\r\n    textId.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").replace(/\\s/g, ''),\r\n    valorPix\r\n  );\r\n  const payload = pix.getPayload();\r\n  //logout incio \r\n  async function handleLogout() {\r\n    setError(\"Algo deu errado\")\r\n    try {\r\n      await logout()\r\n      history.push(\"/Login\")\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n  // Toast show \r\n  function handToast() {\r\n    setShow(true);\r\n    setTimeout(() => {\r\n      setShow(false);\r\n    }, 3000);\r\n    navigator.clipboard.writeText(payload)\r\n  }\r\n  return (\r\n    <>\r\n      <Card className=\"text-light shadow text-center bg-secondary rounded mb-2 \">\r\n        <div className=\"pl-3 pr-3 row justify-content-between mt-2\">\r\n          <Link className=\"badge badge-secondary\" to=\"/UpData\">\r\n            CHAVE</Link>\r\n          <Link to=\"/GerarValor\" className=\"badge badge-secondary\" >\r\n            NOVO PIX </Link>\r\n          <Button className=\"badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n        </div>\r\n        <Card.Body>\r\n          <img src={logo} alt=\"Gera pix\" width=\"200px\" />\r\n\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Toast onClose={() => setShow(false)} show={show} delay={2500} autohide top-center className=\" top-center text-white bg-success\">\r\n            <Toast.Header className=\"bg-success d-inline-block m-1\">\r\n              <img src={logo} alt=\"Gera pix\" width=\"100\" />\r\n              <strong className=\"me-auto text-white bg-success\">   COPIADO     </strong>\r\n            </Toast.Header>\r\n            <Toast.Body>COPIADO COM SUCESSO!</Toast.Body>\r\n          </Toast>\r\n        </Card.Body>\r\n      </Card>\r\n      <Card.Footer className=\"shadow text-center bg-dark text-white rounded\">\r\n        <h6 className=\"text-center\">LER QR-CODE</h6>\r\n        <div className=\"text-center img-fluid\">\r\n          <QRCode value={payload}\r\n            size={280}\r\n            level={\"H\"}\r\n            includeMargin={true}\r\n            className=\"text-center img-fluid\" />\r\n        </div>\r\n\r\n        <div>\r\n          <small> Pagar: {name}</small>\r\n        </div>\r\n        <div>\r\n          <small>Valor: R$ {valorPix}</small>\r\n        </div>\r\n        \r\n    \r\n        <Button className=\"bi bi-clipboard-check badge mr-08 Dark text-white\" onClick={handToast}> COPIAR\r\n        </Button>\r\n      </Card.Footer>\r\n\r\n    </>\r\n  )\r\n}","import firebase from \"firebase\"\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport googleIconImg from '../image/google-icon.svg'\r\nimport logo from '../image/logo.png'\r\n\r\n\r\n\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Senhas não combinam\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Erro ao criar a conta - Tente novamente\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n  //Login google incio\r\n  async function handLoginGoogle() {\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    await firebase.auth().signInWithPopup(provider).then((result) => {\r\n      /** @type {firebase.auth.OAuthCredential} */\r\n\r\n    })\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n\r\n    } catch {\r\n      setError(\"Algo deu errado, tente novamente\")\r\n\r\n    }\r\n    history.push(\"/\")\r\n\r\n    // login google fim \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow p-3 mb-5 bg-dark text-white rounded p-3 mb-2\">\r\n        <Card.Body>\r\n\r\n          <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          <h3 className=\"text-center mb-4 font-weight-bold\">CRIAR CONTA</h3>\r\n          <p className=\"text-center\">Cria sua conta, é grátis!</p>\r\n          <button onClick={handLoginGoogle} className=\"w-100 mt-4 btn btn-primary btn-lg btn btn-danger\" >\r\n            <img className=\"pr-4\" src={googleIconImg} alt=\"Logo do Google\" />\r\n            Crie com o Google\r\n          </button>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-4 mt-4\" id=\"email\">\r\n              <Form.Label className=\"mb-0\">Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Digite seu email\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-4\" id=\"password\">\r\n              <Form.Label className=\"mb-0\">Senha</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"Digite sua senha\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-4\" id=\"password-confirm\">\r\n              <Form.Label className=\"mb-0\">Confirme sua senha.</Form.Label>\r\n              <Form.Control className=\"mb-4\" type=\"password\" ref={passwordConfirmRef} required placeholder=\"Confirme sua senha\" />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">\r\n              CRIAR CONTA\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Você já tem uma conta? <Link to=\"/login\">Fazer login</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import firebase from 'firebase'\r\nimport 'firebase/database'\r\nimport React, { useState, Fragment } from \"react\"\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport logo from '../image/logo.png'\r\n\r\nexport default function UpData() {\r\n\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Falha para fazer logout\")\r\n    }\r\n  }\r\n  // redirecionar sem login l\r\n\r\n  const user = firebase.auth().currentUser;\r\n  //Atualizar  database realtime \r\n\r\n  const [newChave, setNewChave] = useState('')\r\n  const [newCity, setNewcity] = useState('')\r\n  const [newName, setNewName] = useState('')\r\n\r\n  async function handUpdateClient(event) {\r\n    event.preventDefault()\r\n\r\n    if (newChave.trim() === '') {\r\n      return\r\n    }\r\n    if (newName.trim() === '') {\r\n      return\r\n    }\r\n    if (newCity.trim() === '') {\r\n      return\r\n    }\r\n\r\n    const clientRef = firebase.database().ref(`clients/${user?.uid}/key`);\r\n    const firebaseClient = await clientRef.push({\r\n      name: newName,\r\n      authorId: currentUser?.uid,\r\n      city: newCity,\r\n      chave: newChave,\r\n    })\r\n    history.push(\"/Profile\")\r\n    console.log(newName)\r\n  }\r\n  // fim do Atualizar database\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"text-center shadow bg-secondary rounded p-3\">\r\n        <div className=\"w-100 text-right\">\r\n          <Button className=\"mr-03 badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n        </div>\r\n        <Card.Body>\r\n          <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {currentUser?.uid.length > 0 && <div className=\"user-info text-center\">\r\n            <img className=\"rounded-circle  mb-4  text-center\" src={currentUser.photoURL} alt={currentUser.displayName} />\r\n            <p className=\"font-weight-bold mb-4\">{currentUser.displayName}</p>\r\n\r\n          </div>}\r\n        </Card.Body>\r\n      </Card>\r\n      <Card.Footer className=\"shadow mt-2 p-3 bg-dark text-white rounded\">\r\n        <h4 className=\"text-center mb-4\">ATUALIZE SEU DADOS PIX</h4>\r\n        <p className=\"text-center\"> verifique se seus dados já estão cadastrados no seu banco para gerar o PIX</p>\r\n        <Form onSubmit={handUpdateClient}>\r\n          <Form.Group className=\"mb-4\" id=\"chave\">\r\n            <Form.Label className=\"mb-0\">Chave PIX</Form.Label>\r\n            <Form.Control className=\"form-control-sm\" type=\"text\" name=\"newChave\" required placeholder=\"chave\"\r\n              onChange={(event) => setNewChave(event.target.value)}\r\n            />\r\n            <small className=\"form-text text-muted\">Chave PIX já cadastrada na instituição financeira (Telefone, E-mail, CPF, CNPJ ou chave Aleatória) </small>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4\" id=\"name\">\r\n            <Form.Label className=\"mb-0\">Nome do beneficiário</Form.Label>\r\n            <Form.Control className=\"form-control-sm\" type=\"text\" name=\"name\" required placeholder=\"Nome beneficiário\"\r\n              onChange={(event) => setNewName(event.target.value)}\r\n            />\r\n            <small className=\"form-text text-muted\">Nome do beneficiário (até 25 letras). </small>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-4 \" id=\"city\">\r\n            <Form.Label className=\"mb-0\">Digite a cidade</Form.Label>\r\n            <Form.Control className=\"form-control-sm\" type=\"text\" name=\"city\" required placeholder=\"Digite a cidade\"\r\n              onChange={(event) => setNewcity(event.target.value)}\r\n            />\r\n            <small className=\"mt-0 form-text text-muted\">Cidade do beneficiário ou da transação (até 15 letras) </small>\r\n          </Form.Group>\r\n\r\n          <div className=\"text-center\">\r\n            <Button disabled={loading} className=\"btn w-100 mb-4 mt-8\" type=\"submit\">Atualizar chave</Button>\r\n\r\n          </div>\r\n        </Form>\r\n        <div className=\"pl-3 pr-3 row justify-content-between\">\r\n          <Link to=\"/update-profile\" > Atualizar senha </Link>\r\n          <Link to=\"/\">Cancelar</Link>\r\n        </div>\r\n      </Card.Footer>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport logo from '../image/logo.png'\r\n\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, logout, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Senha não são iguais. Digite novamente\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Ocorreu um erro na alteração\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Falha para fazer logout\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"shadow bg-dark rounded p-3\">\r\n        <div className=\"w-100 text-right\">\r\n          <Button className=\"mr-03 badge badge-secondary\" variant=\"link\" onClick={handleLogout}>\r\n            SAIR\r\n          </Button>\r\n        </div>\r\n        <Card.Body className=\"text-light\">\r\n          <div className=\"text-center\">\r\n            <img src={logo} alt=\"Gera pix\" width=\"200\" />\r\n          </div>\r\n\r\n          <h5 className=\"text-center mt-4\">Atualizar dados</h5>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" >\r\n              <Form.Label className=\"text-light mb-0\" >E-mail</Form.Label>\r\n              <Form.Control\r\n                className=\"form-control-sm\"\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label className=\"mt-0 mb-0\">Senha</Form.Label>\r\n              <Form.Control\r\n                className=\"form-control-sm\"\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Nova senha\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label className=\"mb-0\">Confirmar senha</Form.Label>\r\n              <Form.Control\r\n                className=\"form-control-sm\"\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Repita sua senha\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Atualizar\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <div className=\"pl-3 pr-3 row justify-content-between\">\r\n          <Link to=\"/UpData\" > Atualizar Chave PIX </Link>\r\n          <Link to=\"/\">Cancelar</Link>\r\n        </div>\r\n      </Card>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport CreateKey from \"./CreateKey\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport GerarValor from \"./GeraValor\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport Profile from \"./Profile\"\r\nimport GenerationQRCode from \"./QRCode\"\r\nimport Signup from \"./Signup\"\r\nimport UpData from \"./UpdateData\"\r\nimport UpdateProfile from \"./UpdateProfile\"\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center \"\r\n      style={{ minHeight: \"100vh\" }} >\r\n      <div className=\"p-3 mb-2 w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              {<PrivateRoute exact path=\"/\" component={Profile} />}\r\n              <Route path=\"/profile\" component={Profile} />\r\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n              <Route path=\"/signup\" component={Signup} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/Creatkey\" component={CreateKey} />\r\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n              <Route path=\"/UpData\" component={UpData} />\r\n              <Route path=\"/GerarValor\" component={GerarValor} />\r\n              <Route path=\"/QRCode/:idKey\" component={GenerationQRCode} />\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}